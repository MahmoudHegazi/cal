<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  
<style>

html, body{
  min-height: 100%;
  height: 100%;
  margin: auto;
  padding: auto;
  background-image: url("https://trello.com/images/backgrounds/purple-blur.png");
  /* Full height */
  /* Center and scale the image nicely */
  background-position: left;
  background-size: cover;
  width: fit-content;
  background-repeat: repeat;
  color: #172b4d;
  font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif;
  font-size: 14px;
  line-height: 20px;
  font-weight: 400;
  overflow: auto;
    min-width: 100%;
}


/* columns parts lists */

div.main_container {

  background: rgba(9,30,66,.09);
  width: auto;
  min-width: 100%;
  width: fit-content;
  
}

div.mask_list {

}

/* columns that hold lists and cards */
div.listcontainer{
  display: flex;
  flex-flow: column no-wrap;
  align-items: flex-start;
  justify-content: flex-start;
  background: rgba(9,30,66,.05);

}

div.flex-list-item {
  height: auto;
  margin-left: 10px;
  display: flex;
  flex-flow: column no-wrap;
  justify-content: flex-start;
  min-width: 220px;
  width: 272px;
}
div.drop-list{

  border: 2px solid lightgray;
  height: auto;
  margin-left: 10px;
  display: flex;
  flex-flow: column no-wrap;
  justify-content: flex-start;
  min-width: 220px;
  width: 272px;
  background: lightgray;
}


div#static_add_list{

  border: 2px solid lightgray;
  height: auto;
  margin-left: 10px;
  display: flex;
  flex-flow: column no-wrap;
  justify-content: flex-start;
  min-width: 272px;
  width: 272px;
  background: hsla(0,0%,100%,.24);
  color: white;
}

button.add_new_list_btn {

  width: 100%;
  padding: 5px;
  color: white;
  text-align: left;
}

button.add_new_list_btn:hover {
  color: white;
}
button.add_new_card_btn {
  color: rgb(100, 100, 100);
}

div#static_add_list:hover{
  background: hsla(0,0%,100%,.30);
  color: white;
}

.card {
  color: #172b4d;
  
}
.card-body div.add_new{
  
  background: rgba(9,30,66,.08);
  padding: 0;
  margin: 0px;
  background: rgba(9,30,66,.08);
}

.card-body {
  padding: 5px;
}

/* Hide title for new Created row
   can be controled to show titile
*/
.hidden_title {
  display: none;
}

.plus_sign {
  color: rgb(120 120 120);
  margin-right: 5px;
}
div#static_add_list .plus_sign {
  color: white;
}
div.card-title {
  display: block;
  background: rgba(250,255,255,.07);
}


.menu_sign {
  color: gray;
}

/* end cloumns [lists] */

/* cards */

.cards_container {

}

.task_card {
  background: rgba(250,255,255,.9);
  margin-bottom: 10px;
  min-height: 30px;
  padding: 5px;
  cursor: pointer;
  font-size: 0.882em;
}

.cards_container{
  display: flex;
  flex-flow: column nowrap;
  justify-conntent: center;
  align-items: stretch;
}
.card_container{
  padding: 1px;

}

/* ADD new Inputs */
button#cancel_add_list{
  background: transparent;
  border: none;
}

#cancel_add_list i {
  font-size: 26px;
  margin-top: auto;
  margin-bottom: auto;
  color: rgb(150 150 150);

 
}

input#new_list_name {
  margin-bottom: 5px;
}
/* fixed helper hsla(0,0%,100%,.24) */
.float_right{
   float:right;
}

/* Media queries */
@media only screen and (max-width: 800px) {
  div.listcontainer{
   width: fit-content;
  }
  
  
}


</style>
</head>
<body> 

<div class="container-fluid main_container">


<!-- Columns Part [Lists] -->

 <div class="container-fluid listcontainer ">
 

    <!-- New List -->
    <div class="border-default-list drop-list drop-columns card" data-list-title="Client 19">
      <div class="card-body">
        <div class="card-title">
          <span>Client 19</span>
          <span class="menu_sign"><i class="fa fa-ellipsis-h float_right" ></i></span>
        </div>
        <!-- Group Of Cards -->
        <div class="cards_container"></div>
        
         <button class=" add_new_card_btn btn stretched-link"><i class="fa fa-plus plus_sign"></i> Add New Card</button>
      </div>
    </div>
   
      
    

    <!-- New List -->
    <div class="border-default-list drop-list drop-columns card" data-list-title="To Do">
      <div class="card-body">
        <div class="card-title">
          <span>To Do</span>
          <span class="menu_sign"><i class="fa fa-ellipsis-h float_right"></i></span>
        </div>
        
        <!-- Group Of Cards -->
        <div class="cards_container">
          <!-- new Card -->
           <div class="card_container">
             <div class="card task_card">Hello World1</div>
          </div>
          <!-- newCard -->
          <div class="card_container">
             <div class="card task_card">Hello World2</div>
          </div>
       </div>
         <button class=" add_new_card_btn btn stretched-link"><i class="fa fa-plus plus_sign"></i> Add New Card</button>
      </div>
    </div>
  
     <!-- New List -->
    <div class="border-default-list drop-list drop-columns card" data-list-title="Pending">
      <div class="card-body">
        <div class="card-title">
          <span>Pending</span>
          <span class="menu_sign"><i class="fa fa-ellipsis-h float_right"></i></span>
        </div>
        <!-- Group Of Cards -->
        <div class="cards_container">
          <div class="card_container">
            <div class="card task_card">Hello World3</div>
          </div>
        </div>  
        <button class=" add_new_card_btn btn stretched-link"><i class="fa fa-plus plus_sign"></i> Add New Card</button>
      </div>
    </div>
     

     <!-- New List -->
    <div class="border-default-list drop-list drop-columns card" data-list-title="Done" >
      <div class="card-body">
        <div class="card-title">
          <span>Done</span>
          <span class="menu_sign"><i class="fa fa-ellipsis-h float_right"></i></span>
        </div>
         <!-- Group Of Cards -->
        <div class="cards_container">
          <div class="card_container">
            <div class="card task_card">Hello World4</div>
          </div>
        </div>
         <button class=" add_new_card_btn btn stretched-link"><i class="fa fa-plus plus_sign"></i> Add New Card</button>
      </div>
    </div>
    
  <!--- Create new List Part -->   
  
  
  <!-- created New List -->
    <div class="drop-list card" data-list-title="new" id="static_add_list">
      <div class="card-body">
                   <button type="button" class="add_new_list_btn btn stretched-link" id="add_list_btn"> <i class="fa fa-plus plus_sign pluslist"></i> Add New List</button>
         <form id="add-newlist-form">
          <input class="form-control" placeholder="enter list title.." id="new_list_name" type="text" style="display:none;">
          <input class="btn btn-primary" id="new_list_submit" type="button" style="display:none;" value="Add List">
          <button type="button" id="cancel_add_list" style="display: none;"><i class="fa fa-close" style="font-size: 26"></i></button>
         </form>
      </div>
    </div>
  
 <!-- columns end List -->   
</div>
</div>
<script>

    /*
    <!-- New List -->
    <div class="drop-list drop-columns card">
      <div class="card-body">
        <div class="card-title">
          <span>${Cardtitle}</span>
          <span class="menu_sign"><i class="fa fa-ellipsis-h float_right" ></i></span>
        </div>
        <!-- Group Of Cards -->
        <div class="cards_container"></div>
        
         <button class="add_new_list_btn btn stretched-link"><i class="fa fa-plus plus_sign"></i> Add New Card</button>
      </div>
    </div>
    
   */
window.addEventListener('DOMContentLoaded', (event) => {



  /* Global Variables */
  const addNewListContainer = document.getElementById("static_add_list");

const addNewListBtn = document.getElementById("add_list_btn");
const addNewListinput = document.getElementById("new_list_name");
const addNewListsubmit = document.getElementById("new_list_submit");

const canelAddNewList = document.getElementById("cancel_add_list");

  
 /* Helper Functions */
 
 function formatAMPM(date) {
    // function return hours pm/am formated
    var hours = date.getHours();
    var minutes = date.getMinutes();
    var ampm = hours >= 12 ? 'pm' : 'am';
    hours = hours % 12;
    hours = hours ? hours : 12; // the hour '0' should be '12'
    minutes = minutes < 10 ? '0'+minutes : minutes;
    var strTime = hours + ':' + minutes + ' ' + ampm;
    return strTime;
  }


  /* Classes and Objects */

  /* New List Class */

let todoSystem = {
   boardHeader : "Client 19",
   /* DB/Server Must provide the CreatedTime for Board */
   borderTimeStamp: "1625900349123",
   borderTimeString: "7/10/2021 8:59 am",
   createTimeList: () => {
     /* timestamp */
     let date_obect = new Date();
     let timeStamp = date_obect.getTime();
     
     /* formated time */
     let date = `${date_obect.getMonth()+1}/${date_obect.getDate()}`;
     date += `/${date_obect.getFullYear()}`;
     let timeString = `${date} ${formatAMPM(date_obect)}`;
     
     return {string: timeString, stamp: timeStamp};
    
   },
   createListEditOpen: (event)=> {
       event.target.style.display = "none";
       addNewListinput.style.display = "block";
       addNewListsubmit.style.display = "inline";
       canelAddNewList.style.display = "inline";
       addNewListContainer.style.background = "lightgray";
   },
   createListEditClose: (event)=> {

       addNewListinput.style.display = "none";
       addNewListsubmit.style.display = "none";
       canelAddNewList.style.display = "none";
       addNewListBtn.style.display = "block";
       addNewListContainer.style.background = "hsla(0,0%,100%,.24)";
   },
   
   
};


class TodoList {
  constructor(title) {
    this.title = title;

  }
  listTemplate() {
    
    // list create timestamp
    let date_obect = new Date();
    let date = `${date_obect.getMonth()+1}/${date_obect.getDate()}/${date_obect.getFullYear()}`;
    let dateString = `${date} ${formatAMPM(date_obect)}`;
    let createTimeStamp = date_obect.getTime();
    
    const getAllLists = document.querySelectorAll("drop-columns");
    // create List Container

    let listContainer = document.createElement("div");
    listContainer.classList.add("drop-list", "drop-columns","card");
    listContainer.setAttribute("data-list-title", this.title);
    listContainer.setAttribute("data-list-createdate", dateString);
    // Created timestamp to send to server
    listContainer.setAttribute("data-list-timestamp", createTimeStamp);
    
    let listBody = document.createElement("div");
    listBody.classList.add("card-body");
    
    let listTitle = document.createElement("div");
    listTitle.classList.add("card-title");
    
    let listTitleText = document.createElement("span");
    listTitleText.innerText = this.title;

    let MenuIconContainer = document.createElement("span");
    MenuIconContainer.classList.add("menu_sign");
    
    let MenuIcon = document.createElement("i");
    MenuIcon.classList.add("fa", "fa-ellipsis-h", "float_right");
    
    let groupCardsContainer = document.createElement("div");
    groupCardsContainer.classList.add("cards_container");
    
    let addNewCardBtn = document.createElement("button");
    addNewCardBtn.classList.add("add_new_card_btn","btn", "stretched-link");
    addNewCardBtn.innerHTML = '<i class="fa fa-plus plus_sign"></i> Add New Card';
    
    // append New Elements
    MenuIconContainer.appendChild(MenuIcon);
    
    listTitle.appendChild(listTitleText);
    listTitle.appendChild(MenuIconContainer);
    
    listBody.appendChild(listTitle);
    listBody.appendChild(groupCardsContainer);   
    listBody.appendChild(addNewCardBtn);
    listContainer.appendChild(listBody);
    
    // append the new list before the add new list btn
    let parentDiv = document.getElementById("static_add_list").parentNode;
    let static_addListElement = document.getElementById("static_add_list");
    parentDiv.insertBefore(listContainer, static_addListElement);
    return listContainer;
    
  }
 };


  addNewListBtn.addEventListener("click", todoSystem.createListEditOpen);

  canelAddNewList.addEventListener("click", todoSystem.createListEditClose);
  
  
    //let todoList = new TodoList("My New Task");

  /*
  addNewListBtn addNewListinput
  addNewListBtn.addEventListener("click", createTodoList);
  // function to add New Card
  const createTodoList = (event)=> {
    event.preventDefault();
    addNewListinput.style.display = "block";
    //let todoList = new TodoList("My New Task");
  }
  */
  
  /* endclass */
  /* Apply order to cards  */
  function setCardsMetaData() {
  
    // loop over columns [lists] and then get the cards to set the order of cards and status
    let listsColumns = document.querySelectorAll("div.drop-columns"); 
    
    // update Lists
    listsColumns.forEach( (list, lIndex)=> {
    
       // set/update the order of the list data-list-order and flex stlye order
       list.setAttribute("data-list-order", lIndex);
       list.style.order = lIndex;
       
       
       /* if this default list created with board add the border time stamp*/
       if (list.classList.contains("border-default-list")){
       
          list.setAttribute("data-list-createdate", todoSystem.borderTimeString);
          list.setAttribute("data-list-timestamp", todoSystem.borderTimeStamp);
       };
       
       /* others will get time stamp and date from database while created in first timeload */
      
       
       
       // keep the Add New List last order added from UI
       addNewListContainer.style.order = lIndex +1;
    
       let listCards = list.querySelectorAll("div.cards_container div.card_container");
       
       // updates cards
       listCards.forEach( (card, cIndex)=> {
          // asgin the list Title to the card 
          card.setAttribute("data-list", list.getAttribute("data-list-name"));
          
          // set/update the order of the card data-card-order and flex stlye order
          card.setAttribute("data-card-order", cIndex);
          card.style.order = cIndex;
          
       });
       
    });
    
  };
  setCardsMetaData();

});


</script>

</body>
</html>
